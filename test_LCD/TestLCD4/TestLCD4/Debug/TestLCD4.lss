
TestLCD4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  000001ce  00000242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000284  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  000002c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b47  00000000  00000000  00000318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006a4  00000000  00000000  00000e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000044d  00000000  00000000  00001503  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ac  00000000  00000000  00001950  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000379  00000000  00000000  000019fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000050d  00000000  00000000  00001d75  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002282  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ec       	ldi	r30, 0xCE	; 206
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 ce 00 	call	0x19c	; 0x19c <main>
  7a:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_Command>:
	if (row == 1 && pos < 16)
	LCD_Command((pos & 0x0F) | 0x80);
	else if (row == 2 && pos < 16)
	LCD_Command((pos & 0x0F) | 0xC0);
	LCD_String(str);
}
  82:	95 b3       	in	r25, 0x15	; 21
  84:	9f 70       	andi	r25, 0x0F	; 15
  86:	28 2f       	mov	r18, r24
  88:	20 7f       	andi	r18, 0xF0	; 240
  8a:	92 2b       	or	r25, r18
  8c:	95 bb       	out	0x15, r25	; 21
  8e:	a8 98       	cbi	0x15, 0	; 21
  90:	a9 9a       	sbi	0x15, 1	; 21
  92:	35 e0       	ldi	r19, 0x05	; 5
  94:	3a 95       	dec	r19
  96:	f1 f7       	brne	.-4      	; 0x94 <LCD_Command+0x12>
  98:	00 00       	nop
  9a:	a9 98       	cbi	0x15, 1	; 21
  9c:	ef e1       	ldi	r30, 0x1F	; 31
  9e:	f3 e0       	ldi	r31, 0x03	; 3
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <LCD_Command+0x1e>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <LCD_Command+0x24>
  a6:	00 00       	nop
  a8:	25 b3       	in	r18, 0x15	; 21
  aa:	2f 70       	andi	r18, 0x0F	; 15
  ac:	f0 e1       	ldi	r31, 0x10	; 16
  ae:	8f 9f       	mul	r24, r31
  b0:	c0 01       	movw	r24, r0
  b2:	11 24       	eor	r1, r1
  b4:	82 2b       	or	r24, r18
  b6:	85 bb       	out	0x15, r24	; 21
  b8:	a9 9a       	sbi	0x15, 1	; 21
  ba:	35 e0       	ldi	r19, 0x05	; 5
  bc:	3a 95       	dec	r19
  be:	f1 f7       	brne	.-4      	; 0xbc <LCD_Command+0x3a>
  c0:	00 00       	nop
  c2:	a9 98       	cbi	0x15, 1	; 21
  c4:	8f e3       	ldi	r24, 0x3F	; 63
  c6:	9f e1       	ldi	r25, 0x1F	; 31
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCD_Command+0x46>
  cc:	00 c0       	rjmp	.+0      	; 0xce <LCD_Command+0x4c>
  ce:	00 00       	nop
  d0:	08 95       	ret

000000d2 <LCD_Char>:
  d2:	95 b3       	in	r25, 0x15	; 21
  d4:	9f 70       	andi	r25, 0x0F	; 15
  d6:	28 2f       	mov	r18, r24
  d8:	20 7f       	andi	r18, 0xF0	; 240
  da:	92 2b       	or	r25, r18
  dc:	95 bb       	out	0x15, r25	; 21
  de:	a8 9a       	sbi	0x15, 0	; 21
  e0:	a9 9a       	sbi	0x15, 1	; 21
  e2:	35 e0       	ldi	r19, 0x05	; 5
  e4:	3a 95       	dec	r19
  e6:	f1 f7       	brne	.-4      	; 0xe4 <LCD_Char+0x12>
  e8:	00 00       	nop
  ea:	a9 98       	cbi	0x15, 1	; 21
  ec:	ef e1       	ldi	r30, 0x1F	; 31
  ee:	f3 e0       	ldi	r31, 0x03	; 3
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <LCD_Char+0x1e>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_Char+0x24>
  f6:	00 00       	nop
  f8:	25 b3       	in	r18, 0x15	; 21
  fa:	2f 70       	andi	r18, 0x0F	; 15
  fc:	f0 e1       	ldi	r31, 0x10	; 16
  fe:	8f 9f       	mul	r24, r31
 100:	c0 01       	movw	r24, r0
 102:	11 24       	eor	r1, r1
 104:	82 2b       	or	r24, r18
 106:	85 bb       	out	0x15, r24	; 21
 108:	a9 9a       	sbi	0x15, 1	; 21
 10a:	35 e0       	ldi	r19, 0x05	; 5
 10c:	3a 95       	dec	r19
 10e:	f1 f7       	brne	.-4      	; 0x10c <LCD_Char+0x3a>
 110:	00 00       	nop
 112:	a9 98       	cbi	0x15, 1	; 21
 114:	8f e3       	ldi	r24, 0x3F	; 63
 116:	9f e1       	ldi	r25, 0x1F	; 31
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <LCD_Char+0x46>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <LCD_Char+0x4c>
 11e:	00 00       	nop
 120:	08 95       	ret

00000122 <LCD_String>:
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	ec 01       	movw	r28, r24
 128:	88 81       	ld	r24, Y
 12a:	88 23       	and	r24, r24
 12c:	31 f0       	breq	.+12     	; 0x13a <LCD_String+0x18>
 12e:	21 96       	adiw	r28, 0x01	; 1
 130:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_Char>
 134:	89 91       	ld	r24, Y+
 136:	81 11       	cpse	r24, r1
 138:	fb cf       	rjmp	.-10     	; 0x130 <LCD_String+0xe>
 13a:	df 91       	pop	r29
 13c:	cf 91       	pop	r28
 13e:	08 95       	ret

00000140 <LCD_Init>:
 140:	8f ef       	ldi	r24, 0xFF	; 255
 142:	84 bb       	out	0x14, r24	; 20
 144:	2f ef       	ldi	r18, 0xFF	; 255
 146:	89 ef       	ldi	r24, 0xF9	; 249
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	90 40       	sbci	r25, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <LCD_Init+0xa>
 152:	00 c0       	rjmp	.+0      	; 0x154 <LCD_Init+0x14>
 154:	00 00       	nop
 156:	82 e0       	ldi	r24, 0x02	; 2
 158:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 15c:	88 e2       	ldi	r24, 0x28	; 40
 15e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 162:	8c e0       	ldi	r24, 0x0C	; 12
 164:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 168:	86 e0       	ldi	r24, 0x06	; 6
 16a:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 174:	8f e3       	ldi	r24, 0x3F	; 63
 176:	9f e1       	ldi	r25, 0x1F	; 31
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <LCD_Init+0x38>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCD_Init+0x3e>
 17e:	00 00       	nop
 180:	08 95       	ret

00000182 <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command (0x01);		/* Clear display */
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 188:	8f e3       	ldi	r24, 0x3F	; 63
 18a:	9f e1       	ldi	r25, 0x1F	; 31
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <LCD_Clear+0xa>
 190:	00 c0       	rjmp	.+0      	; 0x192 <LCD_Clear+0x10>
 192:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);		/* Cursor at home position */
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 19a:	08 95       	ret

0000019c <main>:
// }

int main(void)
{
	/*DDRD |= (1 << IR_Out_Pin);*/
	DDRD &= ~(1 << 2);
 19c:	8a 98       	cbi	0x11, 2	; 17
	DDRD &= ~(1 << 3);
 19e:	8b 98       	cbi	0x11, 3	; 17
	PORTD |= (1 << 2);
 1a0:	92 9a       	sbi	0x12, 2	; 18
	PORTD |= (1 << 3);
 1a2:	93 9a       	sbi	0x12, 3	; 18
	LCD_Init();
 1a4:	0e 94 a0 00 	call	0x140	; 0x140 <LCD_Init>
	LCD_Clear();
 1a8:	0e 94 c1 00 	call	0x182	; 0x182 <LCD_Clear>
}

void LCD_String_xy(char row, char pos, char *str)
{
	if (row == 1 && pos < 16)
	LCD_Command((pos & 0x0F) | 0x80);
 1ac:	80 e8       	ldi	r24, 0x80	; 128
 1ae:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	else if (row == 2 && pos < 16)
	LCD_Command((pos & 0x0F) | 0xC0);
	LCD_String(str);
 1b2:	80 e6       	ldi	r24, 0x60	; 96
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 91 00 	call	0x122	; 0x122 <LCD_String>
void LCD_String_xy(char row, char pos, char *str)
{
	if (row == 1 && pos < 16)
	LCD_Command((pos & 0x0F) | 0x80);
	else if (row == 2 && pos < 16)
	LCD_Command((pos & 0x0F) | 0xC0);
 1ba:	80 ec       	ldi	r24, 0xC0	; 192
 1bc:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_String(str);
 1c0:	8f e6       	ldi	r24, 0x6F	; 111
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 91 00 	call	0x122	; 0x122 <LCD_String>
 1c8:	ff cf       	rjmp	.-2      	; 0x1c8 <main+0x2c>

000001ca <_exit>:
 1ca:	f8 94       	cli

000001cc <__stop_program>:
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <__stop_program>
